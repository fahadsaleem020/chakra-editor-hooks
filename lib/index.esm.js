import{useState as e,useReducer as t,useMemo as r,useEffect as s}from"react";import{useDisclosure as o}from"@chakra-ui/react";const a=()=>{const[t,r]=e(""),[s,o]=e(!1);return{disclosureProps:{id:t,isOpen:s,defaultIsOpen:s,onClose:()=>o(!1),onOpen:e=>{r(e),o(!0)}}}},n=()=>{const[t,r]=e(),[s,a]=e(),[n,u]=e();return{attributes:t,setNodeAttributes:r,getNodeAttributes:s,swallowNodeAttributes:a,menuProps:n,setMenuProps:u,modalProps:o()}},u=e=>e?.storage,l=(e,{type:t,payload:r})=>{switch(t){case"activate":for(const t of e.slice(0,r?.rowIndex+1))t.slice(0,r?.cellIndex+1).flatMap((e=>e.isActive=!0));return[...e];case"deactivate":return e.flatMap((e=>e.flatMap((e=>e.isActive=!1)))),[...e];case"generateRows":for(let t=0;t<r?.rows;t++)e.push([]);return[...e];case"generateColumns":for(let t=0;t<r?.columns;t++)e.flatMap((e=>e.push({isActive:!1})));return[...e];case"clear":return e=[],[...e];default:throw new Error("unknown table action")}},c=({columns:o,rows:a})=>{const[n,u]=e({columns:o,rows:a}),[c,i]=t(l,[]),[d,p]=e(!0),w=r((()=>({matrix:n,table:c,withHeader:d,updateTable:i,updateMatrix:u,setWithHeader:p})),[n,c,d]);return s((()=>(i({type:"generateRows",payload:{rows:a}}),i({type:"generateColumns",payload:{columns:o}}),()=>i({type:"clear"}))),[o,a]),w},i=(e,t)=>{const{updateAttributes:r,selected:o}=t;s((()=>(o&&t.node.attrs&&e?.swallowNodeAttributes(t.node.attrs),()=>e?.swallowNodeAttributes(void 0))),[t,e,o]),s((()=>(o&&setTimeout((()=>r(e?.attributes)),0),()=>e?.setNodeAttributes(void 0))),[e,o,r])},d=t=>{const[r,s]=e(t);return{handler:e=>{e.preventDefault();const t=new FormData(e.currentTarget),r=Object.fromEntries(t);return s(r),r},previous:r}};export{a as useEditorDisclosure,d as useForm,i as useNode,n as useNodeMeta,u as useStorage,c as useTable};
//# sourceMappingURL=index.esm.js.map
